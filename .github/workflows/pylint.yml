name: CI (Lint/Format & Update README)

on:
  push:
    branches: [ main ]
    paths:
      - 'README.md'
      - 'script_name.py'
      - '**/*.py'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - '**/*.py'
      - '.github/workflows/ci.yml'

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pylint

      - name: List Python files
        run: |
          FILES=$(git ls-files '*.py')
          echo "=== Python files found ==="
          printf "'%s'\n" $FILES
          echo "=========================="

      - name: Run pylint (continue on file errors)
        run: |
          FILES=$(git ls-files '*.py')
          if [ -z "$FILES" ]; then
            echo "No Python files to lint."
          else
            for file in $FILES; do
              echo "Linting $file"
              pylint -- "$file" || echo "File $file caused pylint error"
            done
          fi

      - name: autopep8 (in-place)
        uses: peter-evans/autopep8@v2
        with:
          args: --recursive --in-place --aggressive --aggressive .

      - name: Create Pull Request with formatting fixes
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "autopep8 action fixes [skip ci]"
          title: "Fixes by autopep8 action"
          body: "This is an auto-generated PR with fixes by autopep8."
          labels: autopep8, automated pr
          branch: autopep8-patches
          branch-suffix: timestamp
          delete-branch: true

      - name: Enable auto-merge for the PR
        if: steps.cpr.outputs.pull-request-operation == 'created' || steps.cpr.outputs.pull-request-operation == 'updated'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash

  update-readme:
    # ให้รัน "หลัง" lint-and-format เสมอ
    needs: lint-and-format
    # ให้ทำงานเฉพาะเหตุการณ์ push เท่านั้น (PR ไม่ต้องอัปเดต README)
    if: github.event_name == 'push' && github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Run script to update README
        run: |
          python script_name.py

      - name: Commit and push changes (skip ci)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git diff --cached --quiet && echo "No changes to commit" || git commit -m "Auto update README [skip ci]"
          git push
